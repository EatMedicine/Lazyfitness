@model Lazyfitness.Models.recharge
@{
    ViewBag.Title = "充值管理";
    Layout = "~/Views/Shared/_backStageMainStyle.cshtml";
}
<!--/sidebar-->
<div class="main-wrap">
    <div class="crumb-wrap">
        <div class="crumb-list">
            <i class="icon-font">🔈</i><span>欢迎使用TPAS后台管理系统</span>
        </div>
    </div>
    <div class="result-wrap">
        <div class="result-title">
            <h1>可选操作</h1>
        </div>
        <div class="result-content">
            <div class="short-wrap">
                @Html.ActionLink("返回上一级", "Index", "payManagement")
            </div>
        </div>
    </div>
</div>
<div class="result-content">
    <form method="post" action="~/backStage/payManagement/addCard" autocomplete="off">
        <table class="insert-tab">
            <tr><th></th><td class="show-title">增加充值卡</td></tr>
            <tr>
                <th>
                    充值卡序列号
                </th>
                <td>
                    @Html.TextBoxFor(t => t.rechargeId, new { @class = "input-content" })
                    <div class="error-mes">@Html.ValidationMessageFor(t => t.rechargeId)</div>
                </td>
            </tr>
            <tr>
                <th>
                    充值卡密码
                </th>
                <td>
                    @Html.TextBoxFor(t => t.rechargePwd, new { @class = "input-content" })
                    <div class="error-mes">
                        @Html.ValidationMessageFor(u => u.rechargePwd)
                    </div>
                </td>
            </tr>
            <tr>
                <th>
                    充值卡金额
                </th>
                <td>
                    @Html.TextBoxFor(t => t.amount, new { @class = "input-content" })
                    <div class="error-mes">
                        @Html.ValidationMessageFor(u => u.amount)
                    </div>
                </td>
            </tr>
            <tr>
                <th>
                    是否可用
                </th>
                <td>
                    @Html.RadioButtonFor(t => t.isAvailable, 0, new { @class = "radio-dis" })<lable>否</lable>
                    @Html.RadioButtonFor(u => u.isAvailable, 1, new { @class = "radio-dis" })<lable>是</lable>
                    <div class="error-mes">
                        @Html.ValidationMessageFor(u => u.isAvailable)
                    </div>
                </td>
            </tr>
            <tr>
                <th></th>
                <td>
                    <input class="btn-submit show-border" type="submit" id="postData" name="postData" value="增加" />
                </td>
            </tr>
        </table>
    </form>
</div>