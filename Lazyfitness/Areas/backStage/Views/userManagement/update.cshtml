@using Lazyfitness.Models;
@model Lazyfitness.Models.userInfo
@{
    Layout = "~/Views/Shared/_backStageMainStyle.cshtml";
    ViewBag.Title = "修改用户信息";
}
@{ 
    userInfo userInformation = ViewBag.userInformation as userInfo;
    userStatusName[] nameArray = ViewBag.nameArray as userStatusName[];
}
<!--/sidebar-->
<div class="main-wrap">
    <div class="crumb-wrap">
        <div class="crumb-list">
            <i class="icon-font">🔈</i><span>欢迎使用小懒人共享健身后台管理系统</span>
        </div>
    </div>
    <div class="result-wrap">
        <div class="result-title">
            <h1>可选操作</h1>
        </div>
        <div class="result-content">
            <div class="short-wrap">
                @*@Html.ActionLink("增加用户", "add", "userManagement")
                @Html.ActionLink("删除用户", "delete", "userManagement")
                @Html.ActionLink("修改用户信息", "search", "userManagement")*@
                @Html.ActionLink("返回上一级", "search", "userManagement")
            </div>
        </div>
    </div>
</div>
<div class="result-content">
    <form action="~/backStage/userManagement/updateUserInfo" method="post" @*autocomplete="off"*@>
        <table class="insert-tab">
            <tbody>
                <tr><th></th><td class="show-title">修改用户信息</td></tr>
                <tr>
                    <th>用户ID</th>
                    <td>
                        <input class="input-content txt-unchange" readonly="readonly" name="userId" id="userId" value="@userInformation.userId" /> 
                    </td>
                </tr>
                <tr>
                    <th>
                        用户名
                    </th>
                    <td>
                        @*<input class="input-content" type="text" id="userName" name="userName" value="@userInformation.userName" />*@
                        @Html.TextBoxFor(u => u.userName, new { Value = userInformation.userName,@class = "input-content"
                    })
                        <div class="error-mes">
                            @Html.ValidationMessageFor(u => u.userName)
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>
                        年龄
                    </th>
                    <td>
                        @*<input class="input-content" type="text" id="userAge" name="userAge" value="@userInformation.userAge" />*@
                        @Html.TextBoxFor(u => u.userAge, new { Value = userInformation.userAge, @class = "input-content" })
                        <div class="error-mes">
                            @Html.ValidationMessageFor(u => u.userAge)
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>
                        性别
                    </th>
                    <td>
                        @if (userInformation.userSex == 0)
                        {
                            @Html.RadioButtonFor(u => u.userSex, 0, new { @class = "radio-dis", @checked = "checked" })<label>男</label>
                            @Html.RadioButtonFor(u => u.userSex, 1, new { @class = "radio-dis" })<label>女</label>
                            @Html.RadioButtonFor(u => u.userSex, 2, new { @class = "radio-dis" })<label>保密</label>

                            @*<input class="radio-dis" type="radio" id="userSex" name="userSex" value="0" checked="checked" /><label>男</label>
                            <input class="radio-dis" type="radio" id="userSex" name="userSex" value="1" /><label>女</label>
                            <input class="radio-dis" type="radio" id="userSex" name="userSex" value="2" /><label>保密</label>*@
                        }
                        @if (userInformation.userSex == 1)
                        {
                            @Html.RadioButtonFor(u => u.userSex, 0, new {@class = "radio-dis" })<label>男</label>
                            @Html.RadioButtonFor(u => u.userSex, 1, new {@class = "radio-dis", @checked = "checked" })<label>女</label>
                            @Html.RadioButtonFor(u => u.userSex, 2, new {@class = "radio-dis"})<label>保密</label>

                            @*<input class="radio-dis" type="radio" id="userSex" name="userSex" value="0" /><label>男</label>
                            <input class="radio-dis" type="radio" id="userSex" name="userSex" value="1" checked="checked" /><label>女</label>
                            <input class="radio-dis" type="radio" id="userSex" name="userSex" value="2" /><label>保密</label>*@
                        }
                        @if (userInformation.userSex == 2 || userInformation.userSex == null)
                        {
                            @Html.RadioButtonFor(u => u.userSex, 0, new { @class = "radio-dis" })<label>男</label>
                            @Html.RadioButtonFor(u => u.userSex, 1, new { @class = "radio-dis" })<label>女</label>
                            @Html.RadioButtonFor(u => u.userSex, 2, new { @class = "radio-dis", @checked = "checked" })<label>保密</label>

                            @*<input class="radio-dis" type="radio" id="userSex" name="userSex" value="0" /><label>男</label>
                            <input class="radio-dis" type="radio" id="userSex" name="userSex" value="1" /><label>女</label>*@
                            @*<input class="radio-dis" type="radio" id="userSex" name="userSex" value="2" checked="checked" /><label>保密</label>*@
                        }
                        <div class="error-mes">
                            @Html.ValidationMessageFor(u=>u.userSex)
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>
                        邮箱
                    </th>
                    <td>
                        @Html.TextBoxFor(u=>u.userEmail, new {@Value=userInformation.userEmail, @class="input-content" })
                        @*<input class="input-content" type="text" id="userEmail" name="userEmail" value="@userInformation.userEmail" />*@
                        <div class="error-mes">
                            @Html.ValidationMessageFor(u=>u.userEmail)
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>
                        状态
                    </th>
                    <td>
                        <select name="userStatus">
                            @foreach (var item in nameArray)
                            {
                                if (item.userStatus == userInformation.userStatus)
                                {
                                    <option class="dropdown-list" selected="selected" value=@item.userStatus id="userStatus" name="userStatus">@item.statusName</option>
                                }
                                else
                                {
                                    <option class="dropdown-list" value=@item.userStatus id="userStatus" name="userStatus">@item.statusName</option>
                                }
                            }
                        </select>
                    </td>
                </tr>
                <tr>
                    <th>
                        账户余额
                    </th>
                    <td>
                        @Html.TextBoxFor(u=>u.userAccount, new { @class = "input-content", @Value = @userInformation.userAccount })
                        @*<input class="input-content" type="text" id="userAccount" name="userAccount" value="@userInformation.userAccount" />*@
                        <div class="error-mes">
                            @Html.ValidationMessageFor(u=>u.userAccount)
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>
                        用户简介
                    </th>
                    <td>
                        @Html.TextBoxFor(u => u.userIntroduce, new { @class = "input-content", @Value = @userInformation.userIntroduce })
                        @*<input class="input-content" type="text" id="userIntroduce" name="userIntroduce" value="@userInformation.userIntroduce" />*@
                        <div class="error-mes">
                            @Html.ValidationMessageFor(u => u.userIntroduce)
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>
                        用户头像
                    </th>
                    <td>
                        @Html.TextBoxFor(u => u.userHeaderPic, new { @class = "input-content", @Value = @userInformation.userHeaderPic })
                        @*<input class="input-content" type="text" id="userHeaderPic" name="userHeaderPic" value="@userInformation.userHeaderPic" />*@
                        <div class="error-mes">
                            @Html.ValidationMessageFor(u => u.userHeaderPic)
                        </div>
                    </td>
                </tr>
                <tr>
                    <th></th>
                    <td>
                        <input class="btn-submit show-border" type="submit" id="postData" name="postData" value="修改" />
                    </td>
                </tr>
            </tbody>
        </table>
    </form>
</div>